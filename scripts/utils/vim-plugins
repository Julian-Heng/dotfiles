#!/usr/bin/env bash

trim_string()
{
    str="$1"
    str="${str#"${str%%[![:space:]]*}"}"
    str="${str%"${str##*[![:space:]]}"}"
    printf "%s" "${str}"
}

trim()
{
    [[ "$*" ]] && {
        set -f
        set -- $*
        printf "%s\\n" "$*"
        set +f
    }
}

get_vimrc()
{
    [[ "${vimrc_file}" ]] && \
        return 0

    vim_location=(
        "${HOME}/.vimrc"
        "${HOME}/.vim/vimrc"
    )

    count="0"

    while [[ ! "${vimrc_file}" ]] && ((++count < ${#vim_location[@]})); do
        [[ -f "${vim_location[${count}]}" ]] && \
            vimrc_file="${vim_location[${count}]}"
    done
}

get_plugin_manager()
{
    [[ ! "${vimrc_file}" ]] && \
        return 1

    mapfile -t vimrc_contents < "${vimrc_file}"
    count="0"

    while [[ ! "${plugin}" ]] && ((++count < ${#vimrc_contents[@]})); do
        line="${vimrc_contents[${count}]}"
        [[ ! "${line}" =~ ^\" ]] && \
            case "${vimrc_contents[${count}]}" in
                *"pathogen#infect"*) plugin="pathogen" ;;
                *"plug#begin"*) plugin="plug" ;;
                *"vundle#begin"*) plugin="vundle" ;;
            esac
    done
}

get_plugins()
{
    [[ ! "${plugin}" || ! "${vimrc_contents[*]}" || ! "${vimrc_file}" ]] && \
        return 1

    case "${plugin}" in
        "pathogen")
            count="0"

            while [[ ! "${pathogen_dir}" ]] && ((++count < ${#vimrc_contents[@]})); do
                line="${vimrc_contents[${count}]}"
                [[ "${line}" =~ ^runtime && "${line}" =~ pathogen ]] && {
                    pathogen_dir="${line//runtime }"
                    pathogen_dir="${vimrc_file%/*}/${pathogen_dir%%/*}"
                }
            done

            [[ -d "${pathogen_dir}" ]] && \
                for plugin_path in "${pathogen_dir}"/*; do
                    plugin_name="${plugin_path##${pathogen_dir}/}"
                    plugin_name="${plugin_name/.vim}"
                    plugin_author="$(get_repo_author "${plugin_path}")"
                    [[ "${plugin_name}" ]] && \
                        plugins+=("${plugin_name},${plugin_author:-Unknown}")
                done
        ;;

        "plug")
            count="0"
            unset start
            unset end

            while [[ ! "${start}" || ! "${end}" ]] && ((++count < ${#vimrc_contents[@]})); do
                line="${vimrc_contents[${count}]}"
                [[ ! "${line}" =~ ^\" ]] && \
                    case "${line}" in
                        *"plug#begin"*) start="${count}" ;;
                        *"plug#end"*) end="${count}" ;;
                    esac
            done

            diff="$((end - start))"
            for line in "${vimrc_contents[@]:${start}:${diff}}"; do
                [[ "${line}" =~ ^Plug ]] && \
                    if [[ "${line}" == *"|"* ]]; then
                        IFS=$'\n' read -d "" -ra multi_plug <<< "${line//"|"/$'\n'}"
                        for plug in "${multi_plug[@]}"; do
                            plugins+=("$(process_plug "${plug}")")
                        done
                    else
                        plugins+=("$(process_plug "${line}")")
                    fi
            done
        ;;
    esac
}

get_repo_author()
{
    { [[ -d "$1/.git" ]] || git -C "$1" rev-parse --git-dir > /dev/null 2>&1; } && {
        mapfile -t first_commit < <(git -C "$1" rev-list --max-parents=0 HEAD)
        mapfile -t git_log < <(git -C "$1" log "${first_commit[0]}")
        author="${git_log[1]}"
        author="${author//Author: }"
        author="${author%%<*}"
        author="${author/<}"
        author="$(trim "${author}")"
        printf "%s" "${author}"
    }
}

process_plug()
{
    plugin="$1"
    plugin="${plugin#* }"
    plugin="${plugin/"Plug "}"
    plugin="${plugin%%,*}"
    plugin="${plugin//\'}"
    plugin="${plugin/"https://github.com/"}"
    plugin="${plugin/".git"}"
    plugin_name="$(trim_string "${plugin##*/}")"
    plugin_author="$(trim_string "${plugin%%/*}")"

    [[ "${plugin_author}" =~ ^\~ ]] && {
        plugin_name="${plugin}"
        plugin_author="Unmanaged"
    }

    [[ "${plugin_name}" ]] && \
        printf "%s" "${plugin_name},${plugin_author:-Unknown}"
}

print_plugins()
{
    [[ ! "${plugins[*]}" ]] && \
        return 1

    name_arr+=("Plugin Name")
    author_arr+=("Author")

    for i in "${plugins[@]}"; do
        IFS=$'\n' read -d "" -r name author <<< "${i//,/$'\n'}"

        line_length="${#name}"
        ((line_length >= ${padding:=0})) && {
            padding="${#name}"
            max_line=$((${#name} + ${#author} + 3))
        }

        name_arr+=("${name}")
        author_arr+=("${author}")
    done

    for ((i = 0; i < ${#plugins[@]}; i++)); do
        printf -v "out[$i]" "%-${padding}s %s %s" "${name_arr[$i]}" "|" "${author_arr[$i]}"
    done

    eval printf -v line "%0.s=" "{1..${max_line}}"
    printf "%s\\n" "${line}" "${out[0]}" "${line}"
    printf "%s\\n" "${out[@]:1}"
}

main()
{
    get_vimrc
    get_plugin_manager
    get_plugins
    print_plugins
}

main "$@"
