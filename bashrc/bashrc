##########################
##### Sourcing files #####
##########################
# shellcheck disable=1090,2148,2154

function secure_source
{
    local file="$1"
    if [[ -f "${file}" ]]; then
        source "${file}"
    else
        printf "%s\\n" "${fb[1]}Error:${reset} \"${file}\" is missing"
    fi
}

function detect_os
{
    local distro
    case "$(uname -s)" in
        "Darwin")
            : "MacOS"
        ;;
        "Linux") 
            if type -p lsb_release >/dev/null; then
                : "$(lsb_release -si)"
            elif [[ -f "/etc/lsb-release" ]]; then
                : "$(awk '/DISTRIB_ID/ {print $1}' /etc/lsb-release)"
                : "${_/DISTRIB_ID=/}"
            elif [[ -f "/etc/os-release" ]]; then
                : "$(awk 'NR==1 {print}' /etc/os-release)"
                : "${_/NAME=/}"
                : "${_//\"/}"
            fi
        ;;
        "FreeBSD")
            : "FreeBSD"
        ;;
        "")
            printf "%s\\n" "Error: Cannot detect os"
        ;;
    esac
    distro="${_}"
    printf "%s" "${distro}"
}

function get_module_dir
{
    local module_dir
    if type -p readlink > /dev/null; then
        : "$(readlink "${BASH_SOURCE[0]}")"
        : "${_%/*}/modules"
    else
        : "${HOME}/.dotfiles/bashrc/modules"
    fi
    module_dir="${_}"
    printf "%s" "${module_dir}"
}

function main
{
    distro="$(detect_os)"
    module_dir="$(get_module_dir)"

    modules=(
        "${module_dir}/colors"
        "${module_dir}/aliases"
        "${module_dir}/env_var"
        "${module_dir}/prompt"
    )

    case "${distro}" in
        "MacOS"|"FreeBSD")
            modules+=("/usr/local/share/bash-completion/bash_completion")
        ;;
        *)
            modules+=("/usr/share/bash-completion/bash_completion")
        ;;
    esac

    for i in "${modules[@]}"; do
        secure_source "${i}"
    done
}

main
