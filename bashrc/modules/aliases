#############################
##### Aliases/Functions #####
#############################
# shellcheck disable=2139,2148,2154

upgit()
{
    local -f header > /dev/null 2>&1
    local -a git_dirs
    local item
    local git_dir

    header()
    {
        eval printf -v line "%0.s=" "{1..${#1}}"
        printf "%s\\n" "${line}" "$1" "${line}"
    }

    [[ "$1" ]] && dir="${1%/}" || dir="${PWD}"

    for item in "${dir}/"*; do
        { [[ -d "${item}/.git" ]] || git -C "${item}" rev-parse --git-dir > /dev/null 2>&1; } && \
            git_dirs+=("${item}")
    done

    for git_dir in "${git_dirs[@]}"; do
        header "Updating ${git_dir}"
        git -C "${git_dir}" pull
        printf "\\n"
    done
}

gcll()
{
    local -a args
    local -a repo_list
    local repo

    while (($# > 0)); do
        case "$1" in
            "http"*)
                repo_list+=("$1")
            ;;

            *)
                args+=("$1")
            ;;
        esac
        shift
    done

    for repo in "${repo_list[@]}"; do
        git clone "${repo}" "${args[@]}"
    done
}

gdiff()
{
    local -a args

    args=("--color=always" "$@")

    if (($(wc -l < <(git --no-pager diff "${args[@]}")) > LINES)); then
        less -RSK < <(git --no-pager diff "${args[@]}")
    else
        less -RSFXK < <(git --no-pager diff "${args[@]}")
    fi
}

glog()
{
    local -a format
    local -a args

    format=(
        "┌[%C(bold blue)%H%C(reset)]%C(auto)%d%C(reset)%n"
        "└──[%C(bold cyan)%aD%C(reset)]: %C(bold green)%ar%C(reset)%n%n"
        "%w(0,4,4)Author:  %an %C(dim white)<%ae>%C(reset)%n"
        "%w(0,4,4)Subject: %s%n"
        "%w(0,4,4)%+b%n"
    )

    IFS="" format_str="${format[*]}"
    args=("--color=always" "--format=format:${format_str}" "$@")

    git_out="$(git --no-pager log "${args[@]}" | awk 'NF > 0 {blank=0} NF == 0 {blank++} blank < 2')"

    if (($(wc -l <<< "${git_out}") > LINES)); then
        less -RS <<< "${git_out}"
    else
        less -RSFX <<< "${git_out}"
    fi
}

glog2()
{
    local -a format
    local -a args

    format=(
        "%C(bold blue)%h%C(reset) %C(bold yellow)%ar%C(reset)%x09| "
        "%C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)"
    )

    IFS="" format_str="${format[*]}"
    args=("--color=always" "--format=format:${format_str}" "$@")

    git_out="$(git --no-pager log "${args[@]}")"

    if (($(wc -l <<< "${git_out}") > LINES)); then
        less -RS <<< "${git_out}"
    else
        less -RSFX <<< "${git_out}"
    fi
}

glog3()
{
    local -a args

    args=("--color=always" "--graph" "$@")

    git_out="$(git --no-pager log "${args[@]}")"

    if (($(wc -l <<< "${git_out}") > LINES)); then
        less -RS <<< "${git_out}"
    else
        less -RSFX <<< "${git_out}"
    fi
}

cb()
{
    cd "$@" "${OLDPWD}" || exit
}

man()
{
    MANWIDTH="$((${COLUMNS:-100} > 100 ? 100 : COLUMNS))" command man "$@"
}

alias dl="aria2c --dir=${HOME}/Downloads/"

alias gp="git pull"
alias gcl="git clone"
alias gstat="git status --branch"

alias grep="grep --color=always"

alias 7zcomp="
    7z a -t7z \
         -m0=lzma2 \
         -mx=9 \
         -aoa \
         -mfb=64 \
         -md=32m \
         -ms=on \
         -mhe"

alias yt2mp3="
    youtube-dl  --output ${HOME}/Downloads/ \
                -x \
                --audio-format mp3 \
                --audio-quality 0 \
                -o '%(playlist_index)s %(title)s.%(ext)s' \
                -v"

alias longfetch="neofetch -L; neofetch --off"

alias l="ls"

case "${distro}" in
    "MacOS"|"FreeBSD")
        alias ls="ls -G"
        alias ll="ls -G -l"
        alias la="ls -G -a"
        alias lal="ls -G -a -l"
    ;;

    *)
        alias ls="ls --color --classify"
        alias ll="ls --color --classify -l"
        alias la="ls --color --classify -a"
        alias lal="ls --color --classify -a -l"
        alias open="xdg-open"
    ;;
esac

case "${distro}" in
    "MacOS") alias update="brew -v update && brew -v upgrade" ;;
    "Ubuntu"*|"Debian"*) alias update="sudo apt update && sudo apt upgrade" ;;
    "Antergos"*|"Arch"*)
        if type -p yay > /dev/null; then
            alias update="yay"
        else
            alias update="sudo pacman -Syu"
        fi
    ;;

    "Fedora"|"CentOS"*)
        if type -p dnf > /dev/null; then
            alias update="sudo dnf update"
        elif type -p yum > /dev/null; then
            alias update="sudo yum update"
        else
            printf "%s\\n" "${fb[1]}Error:${reset} Cannot find dnf or yum, 'update' alias not set" >&2
        fi
    ;;

    "VoidLinux") alias update="sudo xbps-install -Su" ;;
    "FreeBSD") alias update="sudo pkg update && sudo pkg upgrade" ;;
    "Windows") alias update="choco upgrade all" ;;
    "") printf "%s\\n" "${fb[1]}Error:${reset} Cannot detect distro, 'update' alias not set" >&2 ;;
    *) printf "%s\\n" "${fb[1]}Error:${reset} Unknown distro, 'update' alias not set" >&2 ;;
esac
