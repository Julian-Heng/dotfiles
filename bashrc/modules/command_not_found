command_not_found_handle()
{
    local package_manager
    local -a pkgs
    local pkg
    local cmd

    cmd="$1"

    printf "bash: %s: command not found\\n" "${cmd}" 1>&2

    case "${distro}" in
        "MacOS") ;;
        "Ubuntu"*|"Debian"*|"Raspbian"*) ;;
        "Antergos"*|"Arch"*)
            package_manager="sudo pacman -S"
            if type -p pkgfile > /dev/null 2>&1; then
                mapfile -t pkgs < <(pkgfile "${cmd}")
            else
                while IFS="" read -r line; do
                    [[ ! "${line}" =~ ^'    ' ]] && \
                        pkgs+=("${line%% *}")
                done < <(pacman -Fs -- "${cmd}")
            fi
        ;;

        "Fedora"|"CentOS"*)
            if type -p dnf > /dev/null 2>&1; then
                package_manager="sudo dnf install"
            else
                package_manager="sudo yum install"
            fi

            while IFS="" read -r line; do
                case "${line}" in
                    "Load"*|*"*"*|"Last metadata"*|\
                    "Repo"*|"Matched from"*|"Provide"*|"") ;;
                    *) pkgs+=("${line%%:*}") ;;
                esac
            done < <(
                    if [[ "${package_manager}" =~ dnf ]]; then
                        dnf whatprovides -- "${cmd}" 2> /dev/null
                    else
                        yum provides -- "${cmd}" 2> /dev/null
                    fi
                )
        ;;

        "VoidLinux") ;;
        "Gentoo") ;;
        "FreeBSD") ;;
    esac

    [[ "${pkgs[*]}" ]] && {
        printf "\\n%s\\n" "${cmd} can be installed by running:"
        for pkg in "${pkgs[@]}"; do
            printf "    %s\\n" "${package_manager} ${pkg}"
        done
        printf "\\n"
    }

    return 127
}
