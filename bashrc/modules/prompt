##################
##### Prompt #####
##################
# shellcheck disable=2148,2154

function prompter
{
    function _git_prompt
    {
        function __get_git_branch
        {
            local branch
            branch="$(awk '/\*/{print}' < <(git branch))"
            branch="${branch//[[:space:]]}"
            branch="${branch//\*/}"
            branch="${branch//\(HEAD/}"
            branch="${branch//detached/}"
            branch="${branch//at/}"
            branch="${branch//\)/}"
            printf "%s" "${branch}"
        }

        function __get_git_status
        {
            # Git status symbols referenced from
            #   - https://github.com/magicmonty/bash-git-prompt/blob/master/gitstatus.sh
            #   - https://git-scm.com/docs/git-status

            local num_staged
            local num_changed
            local num_conflicts
            local num_untracked

            unset num_stages
            unset num_changed
            unset num_conflicts
            unset num_untracked

            while IFS=$'\n' read -r i; do
                case "${i:0:2}" in
                    "??")                       ((num_untracked++)) ;;
                    "U"?|?"U"|"DD"|"AA"|"U")    ((num_conflicts++)) ;;
                    ?"M"|?"D")                  ((num_changed++)) ;;
                    "  "|?" ") ;;
                    *)                          ((num_staged++)) ;;
                esac
            done < <(git status --porcelain)

            ((num_conflicts == 0 && \
              num_changed == 0 && \
              num_staged == 0 && \
              num_untracked == 0 )) && \
                return 1

            ((num_conflicts > 0)) && \
                _git_status+="${fb[1]}✖${num_conflicts}${reset}"
            ((num_changed > 0)) && \
                _git_status+="${fb[4]}✚${num_changed}${reset}"
            ((num_staged > 0)) && \
                _git_status+="${fb[6]}●${num_staged}${reset}"
            ((num_untracked > 0)) && \
                _git_status+="${bold}…${num_untracked}${reset}"

            printf "%s" "${_git_status}"
        }

        if [[ -d ".git" ]] || git rev-parse --git-dir > /dev/null 2>&1; then
            branch="$(__get_git_branch)"
            if ! status="$(__get_git_status)"; then
                git_prompt="-[${c2}${branch:-NA}${reset}]"
            else
                git_prompt="-[${c2}${branch:-NA}${reset}|${status}]"
            fi
        fi

        printf "%s" "${git_prompt}"
    }

    function expand
    {
        str="$1"
        while read -r i; do
            out+=("${i}")
        done <<< "${str}"
        printf "%s" "${out[@]}"
    }

    function dir
    {
        unset _PWD
        dir="${PWD}"
        dir="${dir//${HOME}/"~"}"

        IFS="/"\
        read -r -a parts <<< "${dir}"

        for part in "${parts[@]::${#parts[@]}-1}"; do
            count="0"
            for in_part in $(expand "${part}"); do
                if ((count == 0)); then
                    if [[ "${in_part:0:1}" == "." ]]; then
                        _PWD+="/${in_part:0:2}"
                    else
                        _PWD+="/${in_part:0:1}"
                    fi
                    ((count++))
                else
                    _PWD+="${in_part:0:1}"
                fi
            done
        done

        _PWD+="/${parts[-1]}"
        _PWD="${_PWD#/}"

        ((${#_PWD} > 20)) && _PWD="${parts[-1]}"

        printf "%s" "${_PWD:-"/"}"
    }

    unset prompt_line PS1
 
    c1="${fb[2]}"
    c2="${fb[4]}"

    prompt_line+=("${c1}\\u${reset}@${c1}\\h${reset}: (${c2}$(dir)${reset})$(_git_prompt)\\n")
    prompt_line+=("\\$ ")

    for i in "${prompt_line[@]}"; do
        PS1+="${i}"
    done

    export PS1
}

PROMPT_COMMAND=prompter
