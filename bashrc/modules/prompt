##################
##### Prompt #####
##################

num1="2"
num2="4"
__PS1_CHANGE_COLOR_ENABLE=false
__PS1_CHANGE_COLOR_MODE="random"

function prompter
{
    function _git_status
    {
        if [[ -d ".git" ]] || git rev-parse --git-dir > /dev/null 2>&1; then
            branch="$(git branch)"
            branch="${branch//["*", ]/}"
            [[ "${branch}" == "" ]] && exit
            printf "%s" "-[${c2}${branch}${reset}]"
        fi
    }

    function dir
    {
        unset _PWD
        dir="${PWD}"
        dir="${dir//${HOME}/"~"}"

        IFS="/"\
        read -r -a parts <<< "${dir}"

        for part in "${parts[@]::${#parts[@]}-1}"; do
            _PWD="${_PWD}/${part:0:1}"
        done

        _PWD="${_PWD}/${parts[-1]}"
        _PWD="${_PWD#/}"

        ((${#_PWD} > 20)) && _PWD="${parts[-1]}"

        printf "%s" "${_PWD:-"/"}"
    }

    function increment
    {
        num="$1"
        lower="$2"
        upper="$3"

        if ((num++ > upper)); then
            num="${lower}"
        fi

        printf "%s" "${num}"
    }

    unset line PS1
 
    if $__PS1_CHANGE_COLOR_ENABLE; then
        case "$__PS1_CHANGE_COLOR_MODE" in
            "increment")
                num1="$(increment num1 0 7)"
                num2="$(increment num2 0 7)"
            ;;
            "random")
                num1="$((RANDOM % 8))"
                num2="$((RANDOM % 8))"
            ;;
        esac
    fi

    c1="${fb[$num1]}"
    c2="${fb[$num2]}"

    line+=("${c1}\\u${reset}@${c1}\\h${reset}: (${c2}$(dir)${reset})$(_git_status)\\n")
    line+=("\\$ ")

    for i in "${line[@]}"; do
        PS1="${PS1}${i}"
    done

    export PS1
}

PROMPT_COMMAND=prompter
