#!/usr/bin/env bash

get_screen_res()
{
    if type -p xrandr > /dev/null 2>&1; then
        regex='([0-9]+)x([0-9]+)\+[0-9]\+[0-9]'
        while [[ ! "${screen_width}" && ! "${screen_length}" ]] && read -r line; do
            [[ "${line}" == *"connected"* && "${line}" != *"disconnected"* ]] && {
                [[ "${line}" =~ ${regex} ]] && {
                    screen_width="${BASH_REMATCH[1]}"
                    screen_length="${BASH_REMATCH[2]}"
                }
            }
        done < <(xrandr --nograb --current)

    elif type -p xwininfo > /dev/null 2>&1; then
        read -r screen_width \
                screen_length \
                < <(xwininfo -root |\
                    awk -F':' '/Width|Height/ { printf $2 }')

    elif type -p xdpyinfo > /dev/null 2>&1; then
        IFS="x" \
        read -r screen_width \
                screen_length \
                < <(xdpyinfo |\
                    awk '/dimesions:/ { printf $2 }')
    fi
}

get_coords()
{
    node="$(bspc query --nodes -n)"
    bspc_out="$(bspc query --tree -n "${node}")"
    bspc_out="${bspc_out##*'rectangle":{'}"
    bspc_out="${bspc_out%%\}*}"
    IFS=':,' read -r _ x _ y _ width _ height <<< "${bspc_out//\"}"

    ((a = x, b = a + width, c = y, d = y + height))
}

main()
{
    dir="$1"
    size="${2:-20}"

    [[ ! "${dir}" ]] && \
        exit 1

    { ! pgrep -x bspwm || ! type -p bspc; } > /dev/null 2>&1 && \
        exit 1

    get_screen_res
    [[ ! "${screen_width}" || ! "${screen_length}" ]] && \
        exit 1

    get_coords

    case "${dir}:$((a < screen_width - b)):$((c < screen_length - d))" in
        "left:1"*|"right:0"*)
            args1=("left" "${size}" "0")
            args2=("right" "-${size}" "0")
        ;;

        "left:0"*|"right:1"*)
            args1=("right" "${size}" "0")
            args2=("left" "-${size}" "0")
        ;;

        "down:"*":1"|"up:"*":0")
            args1=("top" "0" "-${size}")
            args2=("bottom" "0" "${size}")
        ;;

        "down:"*":0"|"up:"*":1")
            args1=("bottom" "0" "-${size}")
            args2=("top" "0" "${size}")
        ;;
    esac

    bspc node -z "${args1[@]}"
    bspc node -z "${args2[@]}"
}

main "$@"
